{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/cars/cars.component.css","webpack:///./src/app/cars/cars.component.html","webpack:///./src/app/cars/cars.component.ts","webpack:///./src/app/cars/index.ts","webpack:///./src/app/carsale/carsale.component.css","webpack:///./src/app/carsale/carsale.component.html","webpack:///./src/app/carsale/carsale.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/salespeople/index.ts","webpack:///./src/app/salespeople/salespeople.component.css","webpack:///./src/app/salespeople/salespeople.component.html","webpack:///./src/app/salespeople/salespeople.component.ts","webpack:///./src/app/totalsales/index.ts","webpack:///./src/app/totalsales/totalsales.component.css","webpack:///./src/app/totalsales/totalsales.component.html","webpack:///./src/app/totalsales/totalsales.component.ts","webpack:///./src/main.ts","webpack:///./src/models/car.model.ts","webpack:///./src/models/carsale.model.ts","webpack:///./src/models/salesperson.model.ts","webpack:///./src/services/car.service.ts","webpack:///./src/services/caresale.service.ts","webpack:///./src/services/salesperson.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n  <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" href=\\\"#\\\">Cars R Us</a>\\n</nav>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <nav class=\\\"col-md-2 d-none d-md-block bg-light sidebar\\\">\\n      <div class=\\\"sidebar-sticky\\\">\\n        <ul class=\\\"nav flex-column\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a id=\\\"home-anchor\\\" class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\"> <i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> Home </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a id=\\\"cars-anchor\\\" class=\\\"nav-link\\\" routerLink=\\\"/cars\\\" routerLinkActive=\\\"active\\\"> <i class=\\\"fa fa-car\\\" aria-hidden=\\\"true\\\"></i> Cars </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a id=\\\"salespeople-anchor\\\" class=\\\"nav-link\\\" routerLink=\\\"/salespeople\\\" routerLinkActive=\\\"active\\\"> <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true\\\"></i> Salespeople </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a id=\\\"carsale-anchor\\\" class=\\\"nav-link\\\" routerLink=\\\"/carsale\\\" routerLinkActive=\\\"active\\\"> <i class=\\\"fa fa-usd\\\"></i> Cars for sale </a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a id=\\\"totalsales-anchor\\\" class=\\\"nav-link\\\" routerLink=\\\"/total-sales\\\" routerLinkActive=\\\"active\\\"> <i class=\\\"fa fa-list\\\"></i> Total sales </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4 main\\\">\\n      <router-outlet></router-outlet>\\n    </main>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'car-dealership';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CarsComponent } from './cars/cars.component';\nimport { SalespeopleComponent } from './salespeople/salespeople.component';\nimport { CarsaleComponent } from './carsale/carsale.component';\nimport { TotalsalesComponent } from './totalsales/totalsales.component';\nimport { HomeComponent } from './home/home.component';\n\n\nimport {\n  RouterModule,\n  PreloadAllModules\n} from '@angular/router';\nimport {ROUTES} from './app.routes';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CarService} from '../services/car.service';\nimport {SalesPersonService} from '../services/salesperson.service';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {CarSaleService} from '../services/caresale.service';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarsComponent,\n    SalespeopleComponent,\n    CarsaleComponent,\n    TotalsalesComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    NgxDatatableModule,\n    RouterModule.forRoot(ROUTES, {\n      preloadingStrategy: PreloadAllModules\n    })\n  ],\n  providers: [CarService, SalesPersonService, CarSaleService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\nimport { CarsComponent } from './cars';\r\nimport { SalespeopleComponent } from './salespeople';\r\nimport { TotalsalesComponent } from './totalsales';\r\nimport { HomeComponent } from './home';\r\nimport { CarsaleComponent } from './carsale/carsale.component';\r\n\r\n\r\nexport const ROUTES: Routes = [\r\n  { path: '', redirectTo: '/', pathMatch: 'full' },\r\n  { path: 'home',  component: HomeComponent },\r\n  { path: 'cars', component: CarsComponent },\r\n  { path: 'carsale', component: CarsaleComponent },\r\n  { path: 'salespeople', component: SalespeopleComponent },\r\n  { path: 'total-sales', component: TotalsalesComponent},\r\n  { path: '**', component: HomeComponent }\r\n];\r\n","module.exports = \".fa-trash-o{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Add car</h1>\\n  <form class=\\\"form-row\\\" #carForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"carsForm\\\">\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [(ngModel)]=\\\"carToAdd.name\\\"\\n             formControlName=\\\"name\\\" required=\\\"required\\\">\\n    </div>\\n\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"color\\\">Color</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"color\\\" [(ngModel)]=\\\"carToAdd.color\\\"\\n             formControlName=\\\"color\\\" required=\\\"required\\\">\\n    </div>\\n\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"purchaseValue\\\">Purchase Value</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"purchaseValue\\\" [(ngModel)]=\\\"carToAdd.purchaseValue\\\"\\n             formControlName=\\\"purchaseValue\\\" required=\\\"required\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!carForm.valid\\\">Submit</button>\\n\\n  </form>\\n</div>\\n<hr />\\n<div class=\\\"container pt-3\\\" *ngIf=\\\"carList.length>0\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Color</th>\\n      <th scope=\\\"col\\\">Purchase Value</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let car of carList\\\">\\n      <th scope=\\\"row\\\">{{carList.indexOf(car)+1}}</th>\\n      <td>{{car.name}}</td>\\n      <td>{{car.color}}</td>\\n      <td>{{car.purchaseValue}}</td>\\n      <td><i id=\\\"delete-identity-icon\\\" class=\\\"fa fa-trash-o px-3\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeCar(car)\\\"></i></td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Car} from '../../models/car.model';\nimport {CarService} from '../../services/car.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.css']\n})\nexport class CarsComponent implements OnInit {\n  private carToAdd: Car = new Car();\n  private carList: Car[];\n\n  private carsForm: FormGroup;\n  private name: FormControl;\n  private color: FormControl;\n  private purchaseValue: FormControl;\n\n  constructor(private carService: CarService) {\n    this.carList = this.carService.getCars();\n  }\n  ngOnInit() {\n    this.name = new FormControl('', [Validators.required]);\n    this.color = new FormControl('', [Validators.required]);\n    this.purchaseValue = new FormControl('', [Validators.required]);\n    this.carsForm = new FormGroup({\n      name: this.name,\n      color: this.color,\n      purchaseValue: this.purchaseValue\n    });\n  }\n\n  onSubmit() {\n    // not allowing empty spaces\n    if (this.carToAdd.name.replace(/\\s/g, '').length &&\n      this.carToAdd.color.replace(/\\s/g, '').length) {\n      this.carService.addCar(this.carToAdd);\n    }\n    this.carToAdd = new Car();\n  }\n\n  removeCar(car: Car) {\n    this.carService.deleteCar(car);\n    this.carList = this.carService.getCars();\n  }\n}\n","export * from './cars.component';\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Sale a car</h1>\\n  <form class=\\\"col-md-4\\\" #carSaleForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"carSalesForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"car\\\">Car</label>\\n      <select id=\\\"car\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carForSale\\\" formControlName=\\\"car\\\" required>\\n        <option *ngFor=\\\"let c of carList\\\" [ngValue]=\\\"c\\\">{{c.name}} - {{c.purchaseValue}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"salesman\\\">Salesman</label>\\n      <select id=\\\"salesman\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salesman\\\" formControlName=\\\"salesperson\\\" required>\\n        <option *ngFor=\\\"let s of salesmanList\\\" [ngValue]=\\\"s\\\">{{s.firstname}} - {{s.lastname}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"salePrice\\\">Sale price</label>\\n      <input id=\\\"salePrice\\\" type=\\\"number\\\" value=\\\"{{carForSale.purchaseValue}}\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"price\\\"\\n             formControlName=\\\"salePrice\\\" min=\\\"{{carForSale.purchaseValue}}\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"buyer\\\">Buyer name</label>\\n      <input id=\\\"buyer\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"buyer\\\"\\n             formControlName=\\\"buyerName\\\" required=\\\"required\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <ngb-datepicker #dp [(ngModel)]=\\\"dateModel\\\" formControlName=\\\"datePicker\\\" (navigate)=\\\"date = $event.next\\\"></ngb-datepicker>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!carSaleForm.valid\\\">Submit</button>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\nimport {Car} from '../../models/car.model';\nimport {CarService} from '../../services/car.service';\nimport {SalesPerson} from '../../models/salesperson.model';\nimport {SalesPersonService} from '../../services/salesperson.service';\nimport {CarSaleService} from '../../services/caresale.service';\nimport {CarSale} from '../../models/carsale.model';\n\n@Component({\n  selector: 'app-carsale',\n  templateUrl: './carsale.component.html',\n  styleUrls: ['./carsale.component.css']\n})\nexport class CarsaleComponent implements OnInit {\n  private dateModel: NgbDateStruct;\n  private date: {year: number, month: number};\n  private carList: Car[];\n  private salesmanList: SalesPerson[];\n  private carForSale: Car = new Car(null, null, null);\n  private salesman: SalesPerson;\n  private price: number;\n  private buyer: string;\n\n  private carSalesForm: FormGroup;\n  private car: FormControl;\n  private salesperson: FormControl;\n  private salePrice: FormControl;\n  private buyerName: FormControl;\n  private datePicker: FormControl;\n  constructor(carService: CarService, salePersonService: SalesPersonService, private carSaleService: CarSaleService) {\n    this.car = new FormControl('', [Validators.required]);\n    this.salesperson = new FormControl('', [Validators.required]);\n    this.buyerName = new FormControl('', [Validators.required]);\n    this.datePicker = new FormControl('', [Validators.required]);\n    this.carSalesForm = new FormGroup({\n      car: this.car,\n      salesperson: this.salesperson,\n      buyerName: this.buyerName,\n      datePicker: this.datePicker\n    });\n    this.carList = carService.getCars();\n    this.salesmanList = salePersonService.getSalesPersonList();\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.carSaleService.addCarForSale(new CarSale(this.carForSale, this.salesman, this.buyer,\n      new Date(this.dateModel.year, this.dateModel.month - 1, this.dateModel.day), this.price, this.price - this.carForSale.purchaseValue));\n    this.carForSale = null;\n    this.salesman = null;\n    this.buyer = null;\n    this.price = null;\n    this.dateModel = null;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"mt-5\\\">Hello, Cars R Us!</h1>\\n  <p>\\n    Your car is here.\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export * from './home.component';\r\n","export * from './salespeople.component';\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Add salesman</h1>\\n  <form class=\\\"col-md-4\\\" #salesPersonForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"salesPersonsForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstname\\\">First Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstname\\\" [(ngModel)]=\\\"salesPersonToAdd.firstname\\\"\\n             formControlName=\\\"firstname\\\" required=\\\"required\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastname\\\">Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" [(ngModel)]=\\\"salesPersonToAdd.lastname\\\"\\n             formControlName=\\\"lastname\\\" required=\\\"required\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!salesPersonForm.valid\\\">Submit</button>\\n\\n  </form>\\n</div>\\n<hr />\\n<div class=\\\"container pt-3\\\" *ngIf=\\\"salesPersonList.length>0\\\">\\n  <table class=\\\"table\\\">\\n    <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Firstname</th>\\n      <th scope=\\\"col\\\">Lastname</th>\\n      <th scope=\\\"col\\\">Actions</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let person of salesPersonList\\\">\\n      <th scope=\\\"row\\\">{{salesPersonList.indexOf(person)+1}}</th>\\n      <td>{{person.firstname}}</td>\\n      <td>{{person.lastname}}</td>\\n      <td><i id=\\\"delete-identity-icon\\\" class=\\\"fa fa-trash-o px-3\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeSalesPerson(person)\\\"></i></td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SalesPersonService } from '../../services/salesperson.service';\nimport {SalesPerson} from '../../models/salesperson.model';\nimport {ReactiveFormsModule, FormGroup, Validators, FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-salespeople',\n  templateUrl: './salespeople.component.html',\n  styleUrls: ['./salespeople.component.css']\n})\nexport class SalespeopleComponent implements OnInit {\n  private salesPersonToAdd: SalesPerson = new SalesPerson();\n  private salesPersonList: SalesPerson[];\n\n  private salesPersonsForm: FormGroup;\n  private firstname: FormControl;\n  private lastname: FormControl;\n\n  constructor(private salesPersonService: SalesPersonService) {\n    this.salesPersonList = this.salesPersonService.getSalesPersonList();\n  }\n\n  ngOnInit() {\n    this.firstname = new FormControl('', [Validators.required]);\n    this.lastname = new FormControl('', [Validators.required]);\n    this.salesPersonsForm = new FormGroup({\n      firstname: this.firstname,\n      lastname: this.lastname\n    });\n  }\n\n  onSubmit() {\n    // not allowing empty spaces\n    if (this.salesPersonToAdd.firstname.replace(/\\s/g, '').length &&\n         this.salesPersonToAdd.lastname.replace(/\\s/g, '').length ) {\n      this.salesPersonService.addSalesPerson(this.salesPersonToAdd);\n    }\n    this.salesPersonToAdd = new SalesPerson();\n  }\n\n  removeSalesPerson(salesPerson: SalesPerson) {\n    this.salesPersonService.deleteSalesPerson(salesPerson);\n    this.salesPersonList = this.salesPersonService.getSalesPersonList();\n  }\n\n}\n","export * from './totalsales.component';\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-group col-md-4\\\">\\n  <label for=\\\"salesman\\\">Salesman</label>\\n  <select id=\\\"salesman\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"salesman\\\" (ngModelChange)=\\\"salesmanSelected($event)\\\">\\n    <option *ngFor=\\\"let s of salesmen\\\" [ngValue]=\\\"s\\\">{{s.firstname}} - {{s.lastname}}</option>\\n  </select>\\n</div>\\n<hr />\\n<div class=\\\"container pt-3\\\" *ngIf=\\\"details.length>0\\\">\\n\\n  <ngx-datatable\\n    #table\\n    class='material'\\n    [columnMode]=\\\"'flex'\\\"\\n    [headerHeight]=\\\"'auto'\\\"\\n    [footerHeight]=\\\"'auto'\\\"\\n    [rowHeight]=\\\"'auto'\\\"\\n    [scrollbarH]=\\\"true\\\"\\n    [limit]=\\\"10\\\"\\n    [rows]='details'\\n  >\\n\\n    <ngx-datatable-column name=\\\"Seller name\\\" [flexGrow]=\\\"1\\\" [minWidth]=\\\"80\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template >\\n        <div>{{row.salesman.firstname}} {{row.salesman.lastname}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Buyer name\\\" [flexGrow]=\\\"1\\\" [minWidth]=\\\"80\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div>{{row.buyer}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Car name\\\" [flexGrow]=\\\"1\\\" [minWidth]=\\\"80\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div>{{row.car.name}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Date\\\" [flexGrow]=\\\"1\\\" [minWidth]=\\\"200\\\" [sortable]=\\\"true\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div>{{row.date.toDateString()}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"Price\\\" [flexGrow]=\\\"1\\\" [minWidth]=\\\"50\\\" [sortable]=\\\"true\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div>{{row.price}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"MarkUp\\\" [minWidth]=\\\"50\\\" [flexGrow]=\\\"1\\\" [sortable]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n      <ng-template let-row=\\\"row\\\" ngx-datatable-cell-template>\\n        <div>{{row.markUp}}</div>\\n      </ng-template>\\n    </ngx-datatable-column>\\n  </ngx-datatable>\\n</div>\\n\\n<div class=\\\"form-group col-md-4\\\">\\n  Total MarkUp: {{this.totalMarkUp}}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SalesPersonService} from '../../services/salesperson.service';\nimport {SalesPerson} from '../../models/salesperson.model';\nimport {CarSaleService} from \"../../services/caresale.service\";\nimport {CarSale} from \"../../models/carsale.model\";\n\n@Component({\n  selector: 'app-totalsales',\n  templateUrl: './totalsales.component.html',\n  styleUrls: ['./totalsales.component.css']\n})\nexport class TotalsalesComponent implements OnInit {\n  private salesmen: SalesPerson[];\n  private salesman: SalesPerson;\n  private details: CarSale[] = new Array();\n  private totalMarkUp: number;\n\n  constructor(salesmanService: SalesPersonService, private carSaleService: CarSaleService) {\n    this.salesmen = salesmanService.getSalesPersonList();\n  }\n\n  ngOnInit() {\n  }\n\n  salesmanSelected(event) {\n    let i;\n    this.totalMarkUp = 0;\n    this.details = this.carSaleService.getListOfCarsSold(this.salesman);\n    for (i = 0; i < this.details.length; i++) {\n      this.totalMarkUp += this.details[i].markUp;\n    }\n  }\n\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class Car {\r\n  public name: string;\r\n  public color: string;\r\n  public purchaseValue: number ;\r\n\r\n  public constructor(name?: string,\r\n                     color?: string,\r\n                     purchaseValue?: number ) {\r\n    this.name = name || null;\r\n    this.color = color || null;\r\n    this.purchaseValue = purchaseValue || null;\r\n  }\r\n}\r\n","import {Car} from './car.model';\r\nimport {SalesPerson} from './salesperson.model';\r\n\r\nexport class CarSale {\r\n  public car: Car;\r\n  public salesman: SalesPerson;\r\n  public buyer: string ;\r\n  public date: Date;\r\n  public price: number ;\r\n  public markUp: number ;\r\n  public constructor(car?: Car,\r\n                     salesman?: SalesPerson,\r\n                     buyer?: string,\r\n                     date?: Date,\r\n                     price?: number,\r\n                     markUp?: number) {\r\n    this.car = car || null;\r\n    this.salesman = salesman || null;\r\n    this.buyer = buyer || null;\r\n    this.date = date || null;\r\n    this.price = price || null;\r\n    this.markUp = markUp || null;\r\n  }\r\n}\r\n","export class SalesPerson {\r\n  public firstname: string;\r\n  public lastname: string;\r\n  public totalMarkup: number;\r\n\r\n  public constructor(firstname?: string,\r\n                     lastname?: string,\r\n                     totalMarkup?: number) {\r\n    this.firstname = firstname || null;\r\n    this.lastname = lastname || null;\r\n    this.totalMarkup = totalMarkup || null;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Car} from '../models/car.model';\r\n@Injectable()\r\nexport class CarService {\r\n  private carList: Car[] = new Array();\r\n\r\n  public constructor() {}\r\n\r\n  public addCar(car: Car): void {\r\n    this.carList.push(car);\r\n  }\r\n\r\n  public deleteCar(car: Car): void {\r\n    const index = this.carList.indexOf(car, 0);\r\n    if (index > -1) {\r\n      this.carList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public getCars(): Car[] {\r\n    return this.carList;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CarSale} from '../models/carsale.model';\r\nimport {SalesPerson} from '../models/salesperson.model';\r\n@Injectable()\r\nexport class CarSaleService {\r\n  private carsForSaleList: CarSale[] = new Array();\r\n\r\n  public constructor() {}\r\n\r\n  public addCarForSale(carSale: CarSale): void {\r\n    this.carsForSaleList.push(carSale);\r\n  }\r\n\r\n  public getListOfCarsSold(saleperson: SalesPerson): CarSale[] {\r\n    return this.carsForSaleList.filter(carsale => carsale.salesman === saleperson);\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SalesPerson} from '../models/salesperson.model';\r\n@Injectable()\r\nexport class SalesPersonService {\r\n  private salesPersonList: SalesPerson[] = new Array();\r\n\r\n  public constructor() {}\r\n\r\n  public addSalesPerson(salesperson: SalesPerson): void {\r\n    this.salesPersonList.push(salesperson);\r\n  }\r\n\r\n  public deleteSalesPerson(salesperson: SalesPerson): void {\r\n    const index = this.salesPersonList.indexOf(salesperson, 0);\r\n    if (index > -1) {\r\n      this.salesPersonList.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  public getSalesPersonList(): SalesPerson[] {\r\n    return this.salesPersonList;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}